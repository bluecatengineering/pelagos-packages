@import './breakpoints';
@import './focus';

@base-ellipsis: {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
};

@ellipsis: {
	@base-ellipsis();
	display: block;
};

@layer-hover-effects: {
	transition: background-color 0.15s ease-out;

	&:hover {
		background-color: var(--layer-hover);
	}

	&:active {
		background-color: var(--layer-active);
	}
};

@primary-button-effects: {
	transition: background-color 0.15s ease-out;

	&:hover {
		background-color: var(--button-primary-hover);
	}

	&:active {
		background-color: var(--button-primary-active);
	}
};

/* for now secondary and tertiary buttons look the same to avoid a breaking change
@secondary-button-effects: {
	transition: background-color 0.15s ease-out;

	&:hover {
		background-color: var(--button-secondary-hover);
	}

	&:active {
		background-color: var(--button-secondary-active);
	}
};
*/

@secondary-button-effects: {
	transition: color 0.15s ease-out, background-color 0.15s ease-out, border-color 0.15s ease-out;

	&:focus {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-hover);
		border-color: var(--button-tertiary-hover);
	}

	&:hover {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-hover);
		border-color: var(--button-tertiary-hover);
	}

	&:active {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-active);
		border-color: var(--button-tertiary-active);
	}
};

@tertiary-button-effects: {
	transition: color 0.15s ease-out, background-color 0.15s ease-out, border-color 0.15s ease-out;

	&:focus {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-hover);
		border-color: var(--button-tertiary-hover);
	}

	&:hover {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-hover);
		border-color: var(--button-tertiary-hover);
	}

	&:active {
		color: var(--text-on-color);
		background-color: var(--button-tertiary-active);
		border-color: var(--button-tertiary-active);
	}
};

@icon-button: {
	@focus-visible();
	cursor: pointer;
	color: var(--link-primary);
	background-color: transparent;
	border: none;
	border-radius: 3px;
	transition: background-color 0.15s ease-out;

	&:hover {
		background-color: var(--layer-hover);
	}

	&:active {
		background-color: var(--layer-active);
	}

	&:disabled,
	&[aria-disabled='true'] {
		color: var(--icon-disabled);
		background-color: transparent;
		cursor: not-allowed;
	}
};

@icon-button-nested: {
	@icon-button();
	border-radius: 50%;
};

.wrapping-grid() {
	display: grid;
	grid-column-gap: @sp-24;
	grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
}

.editor-grid(@property; @value1; @value2; @value3; @value4; @value5) {
	grid-template-@{property}: @value1;

	.breakpoint(md, {grid-template-@{property}: @value2});
	.breakpoint(lg, {grid-template-@{property}: @value3});
	.breakpoint(xlg, {grid-template-@{property}: @value4});
	.breakpoint(max, {grid-template-@{property}: @value5});
}

.details-grid(@property; @value1; @value2; @value3; @value4) {
	grid-template-@{property}: @value1;

	.breakpoint(lg, {grid-template-@{property}: @value2});
	.breakpoint(xlg, {grid-template-@{property}: @value3});
	.breakpoint(max, {grid-template-@{property}: @value4});
}
