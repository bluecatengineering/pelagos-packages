// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select rendering renders expected elements 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-owns={null}
    className="Select__text"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    Two
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;

exports[`Select rendering renders expected elements when className is not set 1`] = `
<Layer
  className="Select"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-owns={null}
    className="Select__text"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    Two
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;

exports[`Select rendering renders expected elements when disabled is true 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-owns={null}
    className="Select__text"
    data-placeholder="Testing"
    disabled={true}
    id="test"
    onBlur={[Function]}
    type="button"
  >
    Two
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;

exports[`Select rendering renders expected elements when error is true 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-invalid={true}
    aria-owns={null}
    className="Select__text"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    Two
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;

exports[`Select rendering renders expected elements when open is true 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant="test-1"
    aria-expanded={true}
    aria-haspopup="listbox"
    aria-owns="test-list"
    className="Select__text"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    Two
    <SelectArrow
      className="Select__arrow Select__arrow--open"
    />
  </button>
  <React.Portal>
    <div
      className="Select__list"
      id="test-list"
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      role="listbox"
    >
      <div
        aria-selected={false}
        className="Select__option"
        data-index={0}
        id="test-0"
        role="option"
      >
        One
      </div>
      <div
        aria-selected={true}
        className="Select__option"
        data-index={1}
        id="test-1"
        role="option"
      >
        Two
      </div>
      <div
        aria-selected={false}
        className="Select__option"
        data-index={2}
        id="test-2"
        role="option"
      >
        Three
      </div>
    </div>
  </React.Portal>
</Layer>
`;

exports[`Select rendering renders expected elements when options are booleans 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-owns={null}
    className="Select__text"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    No
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;

exports[`Select rendering renders expected elements when value is not set 1`] = `
<Layer
  className="Select Test"
>
  <button
    aria-activedescendant={null}
    aria-expanded={false}
    aria-haspopup="listbox"
    aria-owns={null}
    className="Select__text Select__text--empty"
    data-placeholder="Testing"
    id="test"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseDown={[Function]}
    type="button"
  >
    
    <SelectArrow
      className="Select__arrow"
    />
  </button>
</Layer>
`;
