// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`TagInputField rendering renders expected elements 1`] = `
<FieldWrapper
  className="TagInputField"
  helperId="random-id-helper"
  helperText="Helper text"
  htmlFor="random-id"
  id="random-id-label"
  label="Label"
  required={true}
>
  <TagInput
    aria-describedby="random-id-helper"
    aria-labelledby="random-id-label"
    aria-required={true}
    id="random-id"
    onChange={[MockFunction]}
    onError={[MockFunction]}
    tags={
      [
        "foo",
      ]
    }
    validate={[MockFunction]}
  />
</FieldWrapper>
`;

exports[`TagInputField rendering renders expected elements if error is set 1`] = `
<FieldWrapper
  className="TagInputField"
  error="Error"
  helperId="random-id-helper"
  helperText="Helper text"
  htmlFor="random-id"
  id="random-id-label"
  label="Label"
>
  <TagInput
    aria-describedby="random-id-helper"
    aria-labelledby="random-id-label"
    error="Error"
    id="random-id"
    onChange={[MockFunction]}
    onError={[MockFunction]}
    tags={
      [
        "foo",
      ]
    }
    validate={[MockFunction]}
  />
</FieldWrapper>
`;

exports[`TagInputField rendering renders expected elements when className is set 1`] = `
<FieldWrapper
  className="TagInputField TestClass"
  helperId="random-id-helper"
  htmlFor="random-id"
  id="random-id-label"
  label="Label"
>
  <TagInput
    aria-describedby="random-id-helper"
    aria-labelledby="random-id-label"
    id="random-id"
    onChange={[MockFunction]}
    onError={[MockFunction]}
    tags={
      [
        "foo",
      ]
    }
    validate={[MockFunction]}
  />
</FieldWrapper>
`;

exports[`TagInputField rendering renders expected elements when disabled 1`] = `
<FieldWrapper
  className="TagInputField"
  helperId="random-id-helper"
  helperText="Helper text"
  htmlFor="random-id"
  id="random-id-label"
  label="Label"
  required={true}
>
  <TagInput
    aria-describedby="random-id-helper"
    aria-labelledby="random-id-label"
    aria-required={true}
    disabled={true}
    id="random-id"
    onChange={[MockFunction]}
    onError={[MockFunction]}
    tags={
      [
        "foo",
      ]
    }
    validate={[MockFunction]}
  />
</FieldWrapper>
`;
