// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FileUploader rendering renders expected elements 1`] = `
<div
  className="FileUploader"
>
  <div
    aria-live="polite"
    className="assistive-text"
  />
  <LabelLine
    htmlFor="random-id"
    text="Test"
  />
  <button
    aria-describedby="random-id-helper"
    aria-invalid={false}
    aria-label="Test. Test drop zone"
    className="FileUploader__dropZone"
    id="random-id"
    onClick={[Function]}
    onDragEnter={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDrop={[Function]}
    type="button"
  >
    Test drop zone
  </button>
  <input
    accept={null}
    className="FileUploader__input"
    onChange={[Function]}
    type="file"
  />
  <div
    className="FileUploader__files"
    onClick={[Function]}
  >
    <Layer
      className="FileUploader__file"
    >
      <p
        className="FileUploader__fileName"
        title="foo.txt"
      >
        foo.txt
      </p>
      <div
        className="FileUploader__fileIcons"
      >
        <button
          aria-label="Remove foo.txt"
          className="FileUploader__fileRemove"
          data-index={0}
          data-testid="remove-file"
          type="button"
        >
          <SvgIcon
            icon={
              {
                "icon": [],
                "iconName": "xmark-thin",
              }
            }
          />
        </button>
      </div>
    </Layer>
  </div>
  <FieldHelper
    id="random-id-helper"
  />
</div>
`;

exports[`FileUploader rendering renders expected elements when files is not set 1`] = `
<div
  className="FileUploader"
>
  <div
    aria-live="polite"
    className="assistive-text"
  />
  <LabelLine
    htmlFor="random-id"
    optional={true}
    text="Test"
  />
  <button
    aria-describedby="random-id-helper"
    aria-invalid={false}
    aria-label="Test. Test drop zone"
    className="FileUploader__dropZone"
    id="random-id"
    onClick={[Function]}
    onDragEnter={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDrop={[Function]}
    type="button"
  >
    Test drop zone
  </button>
  <input
    accept="text/x-foo,.foo,application/x-foo,text/x-bar,.bar1,.bar2,text/x-baz,.baz"
    className="FileUploader__input"
    onChange={[Function]}
    type="file"
  />
  <FieldHelper
    id="random-id-helper"
  />
</div>
`;

exports[`FileUploader rendering renders expected elements when optional properties are set 1`] = `
<div
  className="FileUploader TestClass"
>
  <div
    aria-live="polite"
    className="assistive-text"
  />
  <LabelLine
    htmlFor="random-id"
    optional={false}
    text="Test"
  />
  <button
    aria-describedby="random-id-error"
    aria-invalid={true}
    aria-label="Test. Test drop zone"
    className="FileUploader__dropZone"
    disabled={true}
    id="random-id"
    onClick={[Function]}
    onDragEnter={null}
    onDragLeave={null}
    onDragOver={null}
    onDrop={null}
    type="button"
  >
    Test drop zone
  </button>
  <input
    accept="text/x-foo,.foo,application/x-foo,text/x-bar,.bar1,.bar2,text/x-baz,.baz"
    className="FileUploader__input"
    multiple={true}
    onChange={[Function]}
    type="file"
  />
  <div
    className="FileUploader__files"
    onClick={[Function]}
  >
    <Layer
      className="FileUploader__file FileUploader__file--error"
    >
      <p
        className="FileUploader__fileName"
        title="foo.txt"
      >
        foo.txt
      </p>
      <div
        className="FileUploader__fileIcons"
      >
        <SvgIcon
          className="FileUploader__errorIcon"
          icon={
            {
              "icon": [],
              "iconName": "rhombus-exclamation",
            }
          }
        />
        <button
          aria-label="Remove foo.txt"
          className="FileUploader__fileRemove"
          data-index={0}
          data-testid="remove-file"
          type="button"
        >
          <SvgIcon
            icon={
              {
                "icon": [],
                "iconName": "xmark-thin",
              }
            }
          />
        </button>
      </div>
      <div
        className="FileUploader__fileError"
      >
        Test file error
      </div>
    </Layer>
  </div>
  <FieldError
    id="random-id-error"
    text="Test error"
  />
</div>
`;

exports[`FileUploader rendering renders expected elements when showOpenFilePicker is present 1`] = `
<div
  className="FileUploader"
>
  <div
    aria-live="polite"
    className="assistive-text"
  />
  <LabelLine
    htmlFor="random-id"
    text="Test"
  />
  <button
    aria-describedby="random-id-helper"
    aria-invalid={false}
    aria-label="Test. Test drop zone"
    className="FileUploader__dropZone"
    id="random-id"
    onClick={[Function]}
    onDragEnter={[Function]}
    onDragLeave={[Function]}
    onDragOver={[Function]}
    onDrop={[Function]}
    type="button"
  >
    Test drop zone
  </button>
  <div
    className="FileUploader__files"
    onClick={[Function]}
  >
    <Layer
      className="FileUploader__file"
    >
      <p
        className="FileUploader__fileName"
        title="foo.txt"
      >
        foo.txt
      </p>
      <div
        className="FileUploader__fileIcons"
      >
        <button
          aria-label="Remove foo.txt"
          className="FileUploader__fileRemove"
          data-index={0}
          data-testid="remove-file"
          type="button"
        >
          <SvgIcon
            icon={
              {
                "icon": [],
                "iconName": "xmark-thin",
              }
            }
          />
        </button>
      </div>
    </Layer>
  </div>
  <FieldHelper
    id="random-id-helper"
  />
</div>
`;
