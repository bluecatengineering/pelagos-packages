// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MeterChart rendering renders expected elements 1`] = `
<div
  className="Chart Chart__wrapper"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <div
      className="Chart__meterLabels"
    >
      <div
        className="Chart__meterTitle"
        title="a 35%"
      >
        a 35%
      </div>
      <div
        className="Chart__meterEndLabel"
      />
    </div>
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={0}
        id="random-id-0"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={null}
        onMouseMove={null}
        style={
          {
            "width": "35%",
          }
        }
      />
    </Layer>
  </div>
  <div
    className="Chart__hintContainer"
  />
</div>
`;

exports[`MeterChart rendering renders expected elements when optional properties are set 1`] = `
<div
  className="Chart Chart__wrapper TestClass"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label="b, linear-hint"
        className="Chart__meterBar getDefaultClass clickable"
        data-index={0}
        id="random-id-0"
        onClick={[Function]}
        onKeyDown={[Function]}
        onMouseLeave={null}
        onMouseMove={null}
        role="button"
        style={
          {
            "width": "42%",
          }
        }
        tabIndex={0}
      />
    </Layer>
  </div>
  <div
    className="Chart__hintContainer visible"
  >
    test-hint
  </div>
</div>
`;

exports[`MeterChart rendering renders expected elements when proportional is set 1`] = `
<div
  className="Chart Chart__wrapper"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <div
      className="Chart__meterLabels"
    >
      <div
        className="Chart__meterTitle"
        title="NaN GB used (NaN GB available)"
      >
        NaN GB used (NaN GB available)
      </div>
      <div
        className="Chart__meterEndLabel"
      >
        <span
          className="Chart__meterTotal"
        >
          64 GB total
        </span>
      </div>
    </div>
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={0}
        id="random-id-0"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        style={
          {
            "width": "18.75%",
          }
        }
      />
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={1}
        id="random-id-1"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        style={
          {
            "width": "23.4375%",
          }
        }
      />
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={2}
        id="random-id-2"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={[Function]}
        onMouseMove={[Function]}
        style={
          {
            "width": "9.375%",
          }
        }
      />
      <div
        className="Chart__meterPeak"
        style={
          {
            "left": "90.625%",
          }
        }
      />
    </Layer>
  </div>
  <Legend
    className="start bottom"
    clickable={false}
    direction="horizontal"
    formatter={[Function]}
    getBgClass={
      [MockFunction] {
        "calls": [
          [
            "Alpha",
            null,
            12,
            "getColorClass",
          ],
          [
            "Beta",
            null,
            15,
            "getColorClass",
          ],
          [
            "Gamma",
            null,
            6,
            "getColorClass",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": "getDefaultClass",
          },
          {
            "type": "return",
            "value": "getDefaultClass",
          },
          {
            "type": "return",
            "value": "getDefaultClass",
          },
        ],
      }
    }
    groups={
      [
        "Alpha",
        "Beta",
        "Gamma",
      ]
    }
  />
  <div
    className="Chart__hintContainer"
  />
</div>
`;

exports[`MeterChart rendering renders expected elements when status is set and value matches danger 1`] = `
<div
  className="Chart Chart__wrapper"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <div
      className="Chart__meterLabels"
    >
      <div
        className="Chart__meterTitle"
        title="a 95%"
      >
        a 95%
      </div>
      <div
        className="Chart__meterEndLabel"
      >
        <ErrorFilled
          className="Chart__meterDanger"
        />
      </div>
    </div>
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={0}
        id="random-id-0"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={null}
        onMouseMove={null}
        style={
          {
            "width": "95%",
          }
        }
      />
      <div
        className="Chart__meterPeak"
        style={
          {
            "left": "97%",
          }
        }
      />
    </Layer>
  </div>
  <div
    className="Chart__hintContainer"
  />
</div>
`;

exports[`MeterChart rendering renders expected elements when status is set and value matches success 1`] = `
<div
  className="Chart Chart__wrapper"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <div
      className="Chart__meterLabels"
    >
      <div
        className="Chart__meterTitle"
        title="a 35%"
      >
        a 35%
      </div>
      <div
        className="Chart__meterEndLabel"
      >
        <CheckmarkFilled
          className="Chart__meterSuccess"
        />
      </div>
    </div>
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={0}
        id="random-id-0"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={null}
        onMouseMove={null}
        style={
          {
            "width": "35%",
          }
        }
      />
      <div
        className="Chart__meterPeak"
        style={
          {
            "left": "90%",
          }
        }
      />
    </Layer>
  </div>
  <div
    className="Chart__hintContainer"
  />
</div>
`;

exports[`MeterChart rendering renders expected elements when status is set and value matches warning 1`] = `
<div
  className="Chart Chart__wrapper"
  id="random-id"
>
  <div
    className="Chart__meter"
  >
    <div
      className="Chart__meterLabels"
    >
      <div
        className="Chart__meterTitle"
        title="a 85%"
      >
        a 85%
      </div>
      <div
        className="Chart__meterEndLabel"
      >
        <WarningFilled
          className="Chart__meterWarning"
        />
      </div>
    </div>
    <Layer
      className="Chart__meterTrack"
      style={
        {
          "height": "8px",
        }
      }
    >
      <div
        aria-label={null}
        className="Chart__meterBar getDefaultClass"
        data-index={0}
        id="random-id-0"
        onClick={null}
        onKeyDown={null}
        onMouseLeave={null}
        onMouseMove={null}
        style={
          {
            "width": "85%",
          }
        }
      />
      <div
        className="Chart__meterPeak"
        style={
          {
            "left": "90%",
          }
        }
      />
    </Layer>
  </div>
  <div
    className="Chart__hintContainer"
  />
</div>
`;
