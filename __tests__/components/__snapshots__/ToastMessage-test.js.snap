// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToastMessage rendering does not render close button if type is fatal 1`] = `
<div
  className="ToastMessage ToastMessage--fatal"
  data-testid="toast-fatal"
  id="toast-0"
  role="alert"
>
  <SvgIcon
    className="ToastMessage__icon"
    icon={
      Object {
        "icon": Array [],
        "iconName": "rhombus-exclamation",
      }
    }
  />
  <div
    className="ToastMessage__text"
    data-testid="message"
  >
    This is a test
  </div>
</div>
`;

exports[`ToastMessage rendering renders action button if type is action 1`] = `
<div
  className="ToastMessage ToastMessage--info"
  data-testid="toast-info"
  id="toast-0"
  role="alert"
>
  <SvgIcon
    className="ToastMessage__icon"
    icon={
      Object {
        "icon": Array [],
        "iconName": "circle-info",
        "prefix": "fas",
      }
    }
  />
  <div
    className="ToastMessage__text"
    data-testid="message"
  >
    This is a test
  </div>
  <Button
    className="ToastMessage__button"
    data-testid="toast-button"
    onClick={[Function]}
    size="small"
    text="Action"
    type="ghost"
  />
  <button
    aria-label="Dismiss"
    className="ToastMessage__close"
    data-testid="toast-close"
    onClick={[Function]}
    type="button"
  >
    <SvgIcon
      icon={
        Object {
          "icon": Array [],
          "iconName": "xmark-thin",
        }
      }
    />
  </button>
</div>
`;

exports[`ToastMessage rendering renders close button if type is error 1`] = `
<div
  className="ToastMessage ToastMessage--error"
  data-testid="toast-error"
  id="toast-0"
  role="alert"
>
  <SvgIcon
    className="ToastMessage__icon"
    icon={
      Object {
        "icon": Array [],
        "iconName": "rhombus-exclamation",
      }
    }
  />
  <div
    className="ToastMessage__text"
    data-testid="message"
  >
    This is a test
  </div>
  <button
    aria-label="Dismiss"
    className="ToastMessage__close"
    data-testid="toast-close"
    onClick={[Function]}
    type="button"
  >
    <SvgIcon
      icon={
        Object {
          "icon": Array [],
          "iconName": "xmark-thin",
        }
      }
    />
  </button>
  <div
    className="ToastMessage__time"
  />
</div>
`;
