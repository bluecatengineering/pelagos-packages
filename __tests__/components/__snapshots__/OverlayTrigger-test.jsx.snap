// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OverlayTrigger rendering renders expected elements 1`] = `
<React.Fragment>
  <div
    onBlur={[Function]}
    onFocus={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  />
  <Overlay
    placement="left"
    show={false}
    target={
      OverlayTrigger {
        "context": Object {},
        "hide": [Function],
        "props": Object {
          "children": <div />,
          "overlay": <div />,
          "placement": "left",
        },
        "refs": Object {},
        "setState": [Function],
        "show": [Function],
        "state": Object {
          "show": false,
        },
        "updater": Updater {
          "_callbacks": Array [],
          "_renderer": ReactShallowRenderer {
            "_context": Object {},
            "_didScheduleRenderPhaseUpdate": false,
            "_dispatcher": Object {
              "readContext": [Function],
              "useCallback": [Function],
              "useContext": [Function],
              "useDebugValue": [Function],
              "useEffect": [Function],
              "useImperativeHandle": [Function],
              "useLayoutEffect": [Function],
              "useMemo": [Function],
              "useReducer": [Function],
              "useRef": [Function],
              "useState": [Function],
            },
            "_element": <OverlayTrigger
              overlay={<div />}
              placement="left"
            >
              <div />
            </OverlayTrigger>,
            "_firstWorkInProgressHook": null,
            "_forcedUpdate": false,
            "_instance": [Circular],
            "_isReRender": false,
            "_newState": null,
            "_numberOfReRenders": 0,
            "_renderPhaseUpdates": null,
            "_rendered": <React.Fragment>
              <div
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
              />
              <Overlay
                placement="left"
                show={false}
                target={[Circular]}
              >
                <div />
              </Overlay>
            </React.Fragment>,
            "_rendering": false,
            "_updater": [Circular],
            "_workInProgressHook": null,
          },
        },
      }
    }
  >
    <div />
  </Overlay>
</React.Fragment>
`;
