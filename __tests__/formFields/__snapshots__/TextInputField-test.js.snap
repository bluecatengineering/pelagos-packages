// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInputField rendering adds the error class if the error is set 1`] = `
<div
  className="TextInputField"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="test-id"
      text="Label"
    />
  </div>
  <input
    className="TextInputField__input TextInputField--error"
    disabled={false}
    id="test-id"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value="value"
  />
  <FieldError
    alignment="right"
    text="Error"
  />
</div>
`;

exports[`TextInputField rendering does not render optional text if value is set 1`] = `
<div
  className="TextInputField"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="test-id"
      text="Label"
    />
  </div>
  <input
    className="TextInputField__input"
    disabled={false}
    id="test-id"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value="value"
  />
  <FieldError
    alignment="right"
  />
</div>
`;

exports[`TextInputField rendering renders expected elements 1`] = `
<div
  className="TextInputField"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="test-id"
      text="Label"
    />
  </div>
  <input
    className="TextInputField__input"
    disabled={false}
    id="test-id"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value="value"
  />
  <FieldError
    alignment="right"
  />
</div>
`;

exports[`TextInputField rendering renders expected elements when className is set 1`] = `
<div
  className="TextInputField TestClass"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="test-id"
      text="Label"
    />
  </div>
  <input
    className="TextInputField__input"
    disabled={false}
    id="test-id"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value="value"
  />
  <FieldError
    alignment="right"
  />
</div>
`;

exports[`TextInputField rendering renders optional text if provided 1`] = `
<div
  className="TextInputField"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="test-id"
      text="Label"
    />
    <span
      className="TextInputField__optional"
    >
      optional
    </span>
  </div>
  <input
    className="TextInputField__input"
    disabled={false}
    id="test-id"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value=""
  />
  <FieldError
    alignment="right"
  />
</div>
`;

exports[`TextInputField rendering sets a random id if not provided 1`] = `
<div
  className="TextInputField"
>
  <div
    className="TextInputField__label"
  >
    <Label
      htmlFor="e1"
      text="Label"
    />
  </div>
  <input
    className="TextInputField__input"
    disabled={false}
    id="e1"
    maxLength={10}
    name="name"
    onChange={[MockFunction]}
    placeholder="placeholder"
    type="text"
    value="value"
  />
  <FieldError
    alignment="right"
  />
</div>
`;
